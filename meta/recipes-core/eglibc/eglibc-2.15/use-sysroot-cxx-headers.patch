build system of glibc currently adds the cxx headers path by detecting
it using provided CXX and expects that they are installed w.r.t to standard
installation location but in OE we install and use cxx headers from target
sysroot therefore that code needs to be adapted for OE

Upstream-Status: Inappropriate [OE-specific]

-Khem


--- a/configure.in
+++ b/configure.in
@@ -1094,11 +1094,10 @@ if test -n "$sysheaders"; then
 -isystem `echo $sysheaders | sed 's/:/ -isystem /g'`"
   if test -n "$CXX"; then
     CXX_SYSINCLUDES=
-    cxxversion=`$CXX -dumpversion 2>&AS_MESSAGE_LOG_FD` &&
     cxxmachine=`$CXX -dumpmachine 2>&AS_MESSAGE_LOG_FD` &&
     for d in include "$cxxmachine/include"; do
-      i=../../../../$d/c++/$cxxversion
-      cxxheaders=`$CXX -print-file-name="$i"` &&
+      i="$prefix/$d/c++"
+      cxxheaders=`$CXX -print-sysroot`"$i" &&
       test "x$cxxheaders" != x && test "x$i" != "x$cxxheaders" &&
       CXX_SYSINCLUDES="$CXX_SYSINCLUDES -isystem $cxxheaders \
 -isystem $cxxheaders/$cxxmachine -isystem $cxxheaders/backward"
--- a/configure
+++ b/configure
@@ -5618,11 +5618,10 @@ if test -n "$sysheaders"; then
 -isystem `echo $sysheaders | sed 's/:/ -isystem /g'`"
   if test -n "$CXX"; then
     CXX_SYSINCLUDES=
-    cxxversion=`$CXX -dumpversion 2>&5` &&
     cxxmachine=`$CXX -dumpmachine 2>&5` &&
     for d in include "$cxxmachine/include"; do
-      i=../../../../$d/c++/$cxxversion
-      cxxheaders=`$CXX -print-file-name="$i"` &&
+      i="$prefix/$d/c++"
+      cxxheaders=`$CXX -print-sysroot`"$i" &&
       test "x$cxxheaders" != x && test "x$i" != "x$cxxheaders" &&
       CXX_SYSINCLUDES="$CXX_SYSINCLUDES -isystem $cxxheaders \
 -isystem $cxxheaders/$cxxmachine -isystem $cxxheaders/backward"
